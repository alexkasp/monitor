#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SandBox.Db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="sandBox")]
	public partial class SandBoxDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertVmState(VmState instance);
    partial void UpdateVmState(VmState instance);
    partial void DeleteVmState(VmState instance);
    partial void InsertVmSystem(VmSystem instance);
    partial void UpdateVmSystem(VmSystem instance);
    partial void DeleteVmSystem(VmSystem instance);
    partial void InsertVmType(VmType instance);
    partial void UpdateVmType(VmType instance);
    partial void DeleteVmType(VmType instance);
    partial void InsertResearchesState(ResearchesState instance);
    partial void UpdateResearchesState(ResearchesState instance);
    partial void DeleteResearchesState(ResearchesState instance);
    partial void InsertVm(Vm instance);
    partial void UpdateVm(Vm instance);
    partial void DeleteVm(Vm instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertTask(Task instance);
    partial void UpdateTask(Task instance);
    partial void DeleteTask(Task instance);
    partial void InsertTaskType(TaskType instance);
    partial void UpdateTaskType(TaskType instance);
    partial void DeleteTaskType(TaskType instance);
    partial void InsertRequest(Request instance);
    partial void UpdateRequest(Request instance);
    partial void DeleteRequest(Request instance);
    partial void InsertResearchesVmData(ResearchesVmData instance);
    partial void UpdateResearchesVmData(ResearchesVmData instance);
    partial void DeleteResearchesVmData(ResearchesVmData instance);
    partial void InsertResearch(Research instance);
    partial void UpdateResearch(Research instance);
    partial void DeleteResearch(Research instance);
    partial void InsertMlwrFeature(MlwrFeature instance);
    partial void UpdateMlwrFeature(MlwrFeature instance);
    partial void DeleteMlwrFeature(MlwrFeature instance);
    partial void InsertMonitor(Monitor instance);
    partial void UpdateMonitor(Monitor instance);
    partial void DeleteMonitor(Monitor instance);
    partial void InsertRschEvents(RschEvents instance);
    partial void UpdateRschEvents(RschEvents instance);
    partial void DeleteRschEvents(RschEvents instance);
    partial void InsertTasks(Tasks instance);
    partial void UpdateTasks(Tasks instance);
    partial void DeleteTasks(Tasks instance);
    partial void InsertTaskType1(TaskType1 instance);
    partial void UpdateTaskType1(TaskType1 instance);
    partial void DeleteTaskType1(TaskType1 instance);
    partial void InsertRegs(Regs instance);
    partial void UpdateRegs(Regs instance);
    partial void DeleteRegs(Regs instance);
    partial void InsertProcs(Procs instance);
    partial void UpdateProcs(Procs instance);
    partial void DeleteProcs(Procs instance);
    partial void InsertDirectoryOfEvents(DirectoryOfEvents instance);
    partial void UpdateDirectoryOfEvents(DirectoryOfEvents instance);
    partial void DeleteDirectoryOfEvents(DirectoryOfEvents instance);
    partial void InsertMlwrComments(MlwrComments instance);
    partial void UpdateMlwrComments(MlwrComments instance);
    partial void DeleteMlwrComments(MlwrComments instance);
    partial void InsertPortList(PortList instance);
    partial void UpdatePortList(PortList instance);
    partial void DeletePortList(PortList instance);
    partial void InsertFiles(Files instance);
    partial void UpdateFiles(Files instance);
    partial void DeleteFiles(Files instance);
    partial void InsertCommands(Commands instance);
    partial void UpdateCommands(Commands instance);
    partial void DeleteCommands(Commands instance);
    partial void InsertStopEvents(StopEvents instance);
    partial void UpdateStopEvents(StopEvents instance);
    partial void DeleteStopEvents(StopEvents instance);
    partial void InsertStopRschStatus(StopRschStatus instance);
    partial void UpdateStopRschStatus(StopRschStatus instance);
    partial void DeleteStopRschStatus(StopRschStatus instance);
    partial void Insertevents(events instance);
    partial void Updateevents(events instance);
    partial void Deleteevents(events instance);
    partial void InsertClEvent(ClEvent instance);
    partial void UpdateClEvent(ClEvent instance);
    partial void DeleteClEvent(ClEvent instance);
    partial void InsertClMlwr(ClMlwr instance);
    partial void UpdateClMlwr(ClMlwr instance);
    partial void DeleteClMlwr(ClMlwr instance);
    partial void InsertMlwrCl(MlwrCl instance);
    partial void UpdateMlwrCl(MlwrCl instance);
    partial void DeleteMlwrCl(MlwrCl instance);
    partial void InsertLayout(Layout instance);
    partial void UpdateLayout(Layout instance);
    partial void DeleteLayout(Layout instance);
    partial void InsertEventsChartSign(EventsChartSign instance);
    partial void UpdateEventsChartSign(EventsChartSign instance);
    partial void DeleteEventsChartSign(EventsChartSign instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertMlwrClass(MlwrClass instance);
    partial void UpdateMlwrClass(MlwrClass instance);
    partial void DeleteMlwrClass(MlwrClass instance);
    partial void InsertMlwrClassItem(MlwrClassItem instance);
    partial void UpdateMlwrClassItem(MlwrClassItem instance);
    partial void DeleteMlwrClassItem(MlwrClassItem instance);
    partial void InsertMlwr(Mlwr instance);
    partial void UpdateMlwr(Mlwr instance);
    partial void DeleteMlwr(Mlwr instance);
    partial void InsertUsersInRole(UsersInRole instance);
    partial void UpdateUsersInRole(UsersInRole instance);
    partial void DeleteUsersInRole(UsersInRole instance);
    #endregion
		
		public SandBoxDataContext() : 
				base(global::SandBox.Db.Properties.Settings.Default.sandBoxConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SandBoxDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SandBoxDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SandBoxDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SandBoxDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<ConnectionSetting> ConnectionSettings
		{
			get
			{
				return this.GetTable<ConnectionSetting>();
			}
		}
		
		public System.Data.Linq.Table<VmState> VmStates
		{
			get
			{
				return this.GetTable<VmState>();
			}
		}
		
		public System.Data.Linq.Table<VmSystem> VmSystems
		{
			get
			{
				return this.GetTable<VmSystem>();
			}
		}
		
		public System.Data.Linq.Table<VmType> VmTypes
		{
			get
			{
				return this.GetTable<VmType>();
			}
		}
		
		public System.Data.Linq.Table<ResearchesState> ResearchesStates
		{
			get
			{
				return this.GetTable<ResearchesState>();
			}
		}
		
		public System.Data.Linq.Table<Vm> Vms
		{
			get
			{
				return this.GetTable<Vm>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Task> Tasks
		{
			get
			{
				return this.GetTable<Task>();
			}
		}
		
		public System.Data.Linq.Table<TaskType> TaskTypes
		{
			get
			{
				return this.GetTable<TaskType>();
			}
		}
		
		public System.Data.Linq.Table<Request> Requests
		{
			get
			{
				return this.GetTable<Request>();
			}
		}
		
		public System.Data.Linq.Table<ResearchesVmData> ResearchesVmDatas
		{
			get
			{
				return this.GetTable<ResearchesVmData>();
			}
		}
		
		public System.Data.Linq.Table<Research> Researches
		{
			get
			{
				return this.GetTable<Research>();
			}
		}
		
		public System.Data.Linq.Table<Proc> Proc
		{
			get
			{
				return this.GetTable<Proc>();
			}
		}
		
		public System.Data.Linq.Table<RegTest> RegTest
		{
			get
			{
				return this.GetTable<RegTest>();
			}
		}
		
		public System.Data.Linq.Table<Ports> Ports
		{
			get
			{
				return this.GetTable<Ports>();
			}
		}
		
		public System.Data.Linq.Table<FileList> FileList
		{
			get
			{
				return this.GetTable<FileList>();
			}
		}
		
		public System.Data.Linq.Table<MlwrTargeting> MlwrTargeting
		{
			get
			{
				return this.GetTable<MlwrTargeting>();
			}
		}
		
		public System.Data.Linq.Table<MlwrFeature> MlwrFeature
		{
			get
			{
				return this.GetTable<MlwrFeature>();
			}
		}
		
		public System.Data.Linq.Table<Monitor> Monitor
		{
			get
			{
				return this.GetTable<Monitor>();
			}
		}
		
		public System.Data.Linq.Table<RschEvents> RschEvents
		{
			get
			{
				return this.GetTable<RschEvents>();
			}
		}
		
		public System.Data.Linq.Table<RootClassificationScheme> RootClassificationScheme
		{
			get
			{
				return this.GetTable<RootClassificationScheme>();
			}
		}
		
		public System.Data.Linq.Table<Tasks> Tasks1
		{
			get
			{
				return this.GetTable<Tasks>();
			}
		}
		
		public System.Data.Linq.Table<TasksClassification> TasksClassification
		{
			get
			{
				return this.GetTable<TasksClassification>();
			}
		}
		
		public System.Data.Linq.Table<TaskType1> TaskType1
		{
			get
			{
				return this.GetTable<TaskType1>();
			}
		}
		
		public System.Data.Linq.Table<EventsEventDescriptions> EventsEventDescriptions
		{
			get
			{
				return this.GetTable<EventsEventDescriptions>();
			}
		}
		
		public System.Data.Linq.Table<EventsModulesDescriptions> EventsModulesDescriptions
		{
			get
			{
				return this.GetTable<EventsModulesDescriptions>();
			}
		}
		
		public System.Data.Linq.Table<Regs> Regs
		{
			get
			{
				return this.GetTable<Regs>();
			}
		}
		
		public System.Data.Linq.Table<Procs> Procs
		{
			get
			{
				return this.GetTable<Procs>();
			}
		}
		
		public System.Data.Linq.Table<ModulesVsEvents> ModulesVsEvents
		{
			get
			{
				return this.GetTable<ModulesVsEvents>();
			}
		}
		
		public System.Data.Linq.Table<DirectoryOfEvents> DirectoryOfEvents
		{
			get
			{
				return this.GetTable<DirectoryOfEvents>();
			}
		}
		
		public System.Data.Linq.Table<MlwrComments> MlwrComments
		{
			get
			{
				return this.GetTable<MlwrComments>();
			}
		}
		
		public System.Data.Linq.Table<PortList> PortList
		{
			get
			{
				return this.GetTable<PortList>();
			}
		}
		
		public System.Data.Linq.Table<MlwrReport> MlwrReport
		{
			get
			{
				return this.GetTable<MlwrReport>();
			}
		}
		
		public System.Data.Linq.Table<stats> stats
		{
			get
			{
				return this.GetTable<stats>();
			}
		}
		
		public System.Data.Linq.Table<Files> Files
		{
			get
			{
				return this.GetTable<Files>();
			}
		}
		
		public System.Data.Linq.Table<Commands> Commands
		{
			get
			{
				return this.GetTable<Commands>();
			}
		}
		
		public System.Data.Linq.Table<StopEvents> StopEvents
		{
			get
			{
				return this.GetTable<StopEvents>();
			}
		}
		
		public System.Data.Linq.Table<StopRschStatus> StopRschStatus
		{
			get
			{
				return this.GetTable<StopRschStatus>();
			}
		}
		
		public System.Data.Linq.Table<events> events
		{
			get
			{
				return this.GetTable<events>();
			}
		}
		
		public System.Data.Linq.Table<vpodir> vpodirs
		{
			get
			{
				return this.GetTable<vpodir>();
			}
		}
		
		public System.Data.Linq.Table<vmusage> vmusages
		{
			get
			{
				return this.GetTable<vmusage>();
			}
		}
		
		public System.Data.Linq.Table<ClEvent> ClEvents
		{
			get
			{
				return this.GetTable<ClEvent>();
			}
		}
		
		public System.Data.Linq.Table<ClMlwr> ClMlwrs
		{
			get
			{
				return this.GetTable<ClMlwr>();
			}
		}
		
		public System.Data.Linq.Table<MlwrCl> MlwrCls
		{
			get
			{
				return this.GetTable<MlwrCl>();
			}
		}
		
		public System.Data.Linq.Table<TasksViewForRsch> TasksViewForRsches
		{
			get
			{
				return this.GetTable<TasksViewForRsch>();
			}
		}
		
		public System.Data.Linq.Table<EventsChartCount> EventsChartCounts
		{
			get
			{
				return this.GetTable<EventsChartCount>();
			}
		}
		
		public System.Data.Linq.Table<vpotoos> vpotoos
		{
			get
			{
				return this.GetTable<vpotoos>();
			}
		}
		
		public System.Data.Linq.Table<vpotop5> vpotop5s
		{
			get
			{
				return this.GetTable<vpotop5>();
			}
		}
		
		public System.Data.Linq.Table<Layout> Layouts
		{
			get
			{
				return this.GetTable<Layout>();
			}
		}
		
		public System.Data.Linq.Table<EventsChartSign> EventsChartSigns
		{
			get
			{
				return this.GetTable<EventsChartSign>();
			}
		}
		
		public System.Data.Linq.Table<EventsTableView> EventsTableViews
		{
			get
			{
				return this.GetTable<EventsTableView>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<ResearchesTableView> ResearchesTableViews
		{
			get
			{
				return this.GetTable<ResearchesTableView>();
			}
		}
		
		public System.Data.Linq.Table<DirectoriesOfEventsView> DirectoriesOfEventsViews
		{
			get
			{
				return this.GetTable<DirectoriesOfEventsView>();
			}
		}
		
		public System.Data.Linq.Table<MlwrClass> MlwrClasses
		{
			get
			{
				return this.GetTable<MlwrClass>();
			}
		}
		
		public System.Data.Linq.Table<MlwrClassItem> MlwrClassItems
		{
			get
			{
				return this.GetTable<MlwrClassItem>();
			}
		}
		
		public System.Data.Linq.Table<MlwrsTableView> MlwrsTableViews
		{
			get
			{
				return this.GetTable<MlwrsTableView>();
			}
		}
		
		public System.Data.Linq.Table<MlwrClassView> MlwrClassViews
		{
			get
			{
				return this.GetTable<MlwrClassView>();
			}
		}
		
		public System.Data.Linq.Table<MlwrVPOClassItem> MlwrVPOClassItems
		{
			get
			{
				return this.GetTable<MlwrVPOClassItem>();
			}
		}
		
		public System.Data.Linq.Table<Mlwr> Mlwrs
		{
			get
			{
				return this.GetTable<Mlwr>();
			}
		}
		
		public System.Data.Linq.Table<UsersInRole> UsersInRoles
		{
			get
			{
				return this.GetTable<UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<UsersTableView> UsersTableViews
		{
			get
			{
				return this.GetTable<UsersTableView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Login;
		
		private string _Password;
		
		private string _PasswordSalt;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _LastLoginIp;
		
		private string _UserName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastLoginDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginDateChanged();
    partial void OnLastLoginIpChanging(string value);
    partial void OnLastLoginIpChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIp", DbType="NVarChar(50)")]
		public string LastLoginIp
		{
			get
			{
				return this._LastLoginIp;
			}
			set
			{
				if ((this._LastLoginIp != value))
				{
					this.OnLastLoginIpChanging(value);
					this.SendPropertyChanging();
					this._LastLoginIp = value;
					this.SendPropertyChanged("LastLoginIp");
					this.OnLastLoginIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100)", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConnectionSettings")]
	public partial class ConnectionSetting
	{
		
		private string _RemoteHost;
		
		private int _RemotePort;
		
		private bool _Reconnect;
		
		public ConnectionSetting()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemoteHost", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RemoteHost
		{
			get
			{
				return this._RemoteHost;
			}
			set
			{
				if ((this._RemoteHost != value))
				{
					this._RemoteHost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RemotePort", DbType="Int NOT NULL")]
		public int RemotePort
		{
			get
			{
				return this._RemotePort;
			}
			set
			{
				if ((this._RemotePort != value))
				{
					this._RemotePort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reconnect", DbType="Bit NOT NULL")]
		public bool Reconnect
		{
			get
			{
				return this._Reconnect;
			}
			set
			{
				if ((this._Reconnect != value))
				{
					this._Reconnect = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VmState")]
	public partial class VmState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _State;
		
		private string _Description;
		
		private EntityRef<Vm> _Vm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VmState()
		{
			this._Vm = default(EntityRef<Vm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					if (this._Vm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vm_VmState", Storage="_Vm", ThisKey="State", OtherKey="State", IsForeignKey=true)]
		public Vm Vm
		{
			get
			{
				return this._Vm.Entity;
			}
			set
			{
				Vm previousValue = this._Vm.Entity;
				if (((previousValue != value) 
							|| (this._Vm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vm.Entity = null;
						previousValue.VmStates.Remove(this);
					}
					this._Vm.Entity = value;
					if ((value != null))
					{
						value.VmStates.Add(this);
						this._State = value.State;
					}
					else
					{
						this._State = default(int);
					}
					this.SendPropertyChanged("Vm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VmSystem")]
	public partial class VmSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _System;
		
		private string _Description;
		
		private string _ShortDest;
		
		private EntityRef<Vm> _Vm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemChanging(int value);
    partial void OnSystemChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnShortDestChanging(string value);
    partial void OnShortDestChanged();
    #endregion
		
		public VmSystem()
		{
			this._Vm = default(EntityRef<Vm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int System
		{
			get
			{
				return this._System;
			}
			set
			{
				if ((this._System != value))
				{
					if (this._Vm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSystemChanging(value);
					this.SendPropertyChanging();
					this._System = value;
					this.SendPropertyChanged("System");
					this.OnSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDest", DbType="VarChar(50)", CanBeNull=false)]
		public string ShortDest
		{
			get
			{
				return this._ShortDest;
			}
			set
			{
				if ((this._ShortDest != value))
				{
					this.OnShortDestChanging(value);
					this.SendPropertyChanging();
					this._ShortDest = value;
					this.SendPropertyChanged("ShortDest");
					this.OnShortDestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vm_VmSystem", Storage="_Vm", ThisKey="System", OtherKey="System", IsForeignKey=true)]
		public Vm Vm
		{
			get
			{
				return this._Vm.Entity;
			}
			set
			{
				Vm previousValue = this._Vm.Entity;
				if (((previousValue != value) 
							|| (this._Vm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vm.Entity = null;
						previousValue.VmSystems.Remove(this);
					}
					this._Vm.Entity = value;
					if ((value != null))
					{
						value.VmSystems.Add(this);
						this._System = value.System;
					}
					else
					{
						this._System = default(int);
					}
					this.SendPropertyChanged("Vm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VmType")]
	public partial class VmType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type;
		
		private string _Description;
		
		private EntityRef<Vm> _Vm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public VmType()
		{
			this._Vm = default(EntityRef<Vm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._Vm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vm_VmType", Storage="_Vm", ThisKey="Type", OtherKey="Type", IsForeignKey=true)]
		public Vm Vm
		{
			get
			{
				return this._Vm.Entity;
			}
			set
			{
				Vm previousValue = this._Vm.Entity;
				if (((previousValue != value) 
							|| (this._Vm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vm.Entity = null;
						previousValue.VmTypes.Remove(this);
					}
					this._Vm.Entity = value;
					if ((value != null))
					{
						value.VmTypes.Add(this);
						this._Type = value.Type;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("Vm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResearchesState")]
	public partial class ResearchesState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _State;
		
		private string _Description;
		
		private EntityRef<Research> _Research;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ResearchesState()
		{
			this._Research = default(EntityRef<Research>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					if (this._Research.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Research_ResearchesState", Storage="_Research", ThisKey="State", OtherKey="State", IsForeignKey=true)]
		public Research Research
		{
			get
			{
				return this._Research.Entity;
			}
			set
			{
				Research previousValue = this._Research.Entity;
				if (((previousValue != value) 
							|| (this._Research.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Research.Entity = null;
						previousValue.ResearchesStates.Remove(this);
					}
					this._Research.Entity = value;
					if ((value != null))
					{
						value.ResearchesStates.Add(this);
						this._State = value.State;
					}
					else
					{
						this._State = default(int);
					}
					this.SendPropertyChanged("Research");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vm")]
	public partial class Vm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _Type;
		
		private int _System;
		
		private int _State;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _EnvId;
		
		private int _EnvType;
		
		private string _EnvMac;
		
		private string _EnvIp;
		
		private string _Description;
		
		private EntitySet<VmState> _VmStates;
		
		private EntitySet<VmSystem> _VmSystems;
		
		private EntitySet<VmType> _VmTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnSystemChanging(int value);
    partial void OnSystemChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnEnvIdChanging(int value);
    partial void OnEnvIdChanged();
    partial void OnEnvTypeChanging(int value);
    partial void OnEnvTypeChanged();
    partial void OnEnvMacChanging(string value);
    partial void OnEnvMacChanged();
    partial void OnEnvIpChanging(string value);
    partial void OnEnvIpChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Vm()
		{
			this._VmStates = new EntitySet<VmState>(new Action<VmState>(this.attach_VmStates), new Action<VmState>(this.detach_VmStates));
			this._VmSystems = new EntitySet<VmSystem>(new Action<VmSystem>(this.attach_VmSystems), new Action<VmSystem>(this.detach_VmSystems));
			this._VmTypes = new EntitySet<VmType>(new Action<VmType>(this.attach_VmTypes), new Action<VmType>(this.detach_VmTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_System", DbType="Int NOT NULL")]
		public int System
		{
			get
			{
				return this._System;
			}
			set
			{
				if ((this._System != value))
				{
					this.OnSystemChanging(value);
					this.SendPropertyChanging();
					this._System = value;
					this.SendPropertyChanged("System");
					this.OnSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvId", DbType="Int NOT NULL")]
		public int EnvId
		{
			get
			{
				return this._EnvId;
			}
			set
			{
				if ((this._EnvId != value))
				{
					this.OnEnvIdChanging(value);
					this.SendPropertyChanging();
					this._EnvId = value;
					this.SendPropertyChanged("EnvId");
					this.OnEnvIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvType", DbType="Int NOT NULL")]
		public int EnvType
		{
			get
			{
				return this._EnvType;
			}
			set
			{
				if ((this._EnvType != value))
				{
					this.OnEnvTypeChanging(value);
					this.SendPropertyChanging();
					this._EnvType = value;
					this.SendPropertyChanged("EnvType");
					this.OnEnvTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvMac", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string EnvMac
		{
			get
			{
				return this._EnvMac;
			}
			set
			{
				if ((this._EnvMac != value))
				{
					this.OnEnvMacChanging(value);
					this.SendPropertyChanging();
					this._EnvMac = value;
					this.SendPropertyChanged("EnvMac");
					this.OnEnvMacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvIp", DbType="VarChar(MAX)")]
		public string EnvIp
		{
			get
			{
				return this._EnvIp;
			}
			set
			{
				if ((this._EnvIp != value))
				{
					this.OnEnvIpChanging(value);
					this.SendPropertyChanging();
					this._EnvIp = value;
					this.SendPropertyChanged("EnvIp");
					this.OnEnvIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vm_VmState", Storage="_VmStates", ThisKey="State", OtherKey="State")]
		public EntitySet<VmState> VmStates
		{
			get
			{
				return this._VmStates;
			}
			set
			{
				this._VmStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vm_VmSystem", Storage="_VmSystems", ThisKey="System", OtherKey="System")]
		public EntitySet<VmSystem> VmSystems
		{
			get
			{
				return this._VmSystems;
			}
			set
			{
				this._VmSystems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vm_VmType", Storage="_VmTypes", ThisKey="Type", OtherKey="Type")]
		public EntitySet<VmType> VmTypes
		{
			get
			{
				return this._VmTypes;
			}
			set
			{
				this._VmTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VmStates(VmState entity)
		{
			this.SendPropertyChanging();
			entity.Vm = this;
		}
		
		private void detach_VmStates(VmState entity)
		{
			this.SendPropertyChanging();
			entity.Vm = null;
		}
		
		private void attach_VmSystems(VmSystem entity)
		{
			this.SendPropertyChanging();
			entity.Vm = this;
		}
		
		private void detach_VmSystems(VmSystem entity)
		{
			this.SendPropertyChanging();
			entity.Vm = null;
		}
		
		private void attach_VmTypes(VmType entity)
		{
			this.SendPropertyChanging();
			entity.Vm = this;
		}
		
		private void detach_VmTypes(VmType entity)
		{
			this.SendPropertyChanging();
			entity.Vm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _TIme;
		
		private int _ResearchId;
		
		private int _ModuleId;
		
		private int _ActionId;
		
		private string _Object;
		
		private string _Target;
		
		private string _Additional;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTImeChanging(System.DateTime value);
    partial void OnTImeChanged();
    partial void OnResearchIdChanging(int value);
    partial void OnResearchIdChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnObjectChanging(string value);
    partial void OnObjectChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnAdditionalChanging(string value);
    partial void OnAdditionalChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIme", DbType="DateTime NOT NULL")]
		public System.DateTime TIme
		{
			get
			{
				return this._TIme;
			}
			set
			{
				if ((this._TIme != value))
				{
					this.OnTImeChanging(value);
					this.SendPropertyChanging();
					this._TIme = value;
					this.SendPropertyChanged("TIme");
					this.OnTImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchId", DbType="Int NOT NULL")]
		public int ResearchId
		{
			get
			{
				return this._ResearchId;
			}
			set
			{
				if ((this._ResearchId != value))
				{
					this.OnResearchIdChanging(value);
					this.SendPropertyChanging();
					this._ResearchId = value;
					this.SendPropertyChanged("ResearchId");
					this.OnResearchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Object", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Object
		{
			get
			{
				return this._Object;
			}
			set
			{
				if ((this._Object != value))
				{
					this.OnObjectChanging(value);
					this.SendPropertyChanging();
					this._Object = value;
					this.SendPropertyChanged("Object");
					this.OnObjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Additional", DbType="VarChar(MAX)")]
		public string Additional
		{
			get
			{
				return this._Additional;
			}
			set
			{
				if ((this._Additional != value))
				{
					this.OnAdditionalChanging(value);
					this.SendPropertyChanging();
					this._Additional = value;
					this.SendPropertyChanged("Additional");
					this.OnAdditionalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Task : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResearchId;
		
		private int _Type;
		
		private string _Value;
		
		private EntitySet<TaskType> _TaskTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResearchIdChanging(int value);
    partial void OnResearchIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Task()
		{
			this._TaskTypes = new EntitySet<TaskType>(new Action<TaskType>(this.attach_TaskTypes), new Action<TaskType>(this.detach_TaskTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchId", DbType="Int NOT NULL")]
		public int ResearchId
		{
			get
			{
				return this._ResearchId;
			}
			set
			{
				if ((this._ResearchId != value))
				{
					this.OnResearchIdChanging(value);
					this.SendPropertyChanging();
					this._ResearchId = value;
					this.SendPropertyChanged("ResearchId");
					this.OnResearchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_TaskType", Storage="_TaskTypes", ThisKey="Type", OtherKey="Type")]
		public EntitySet<TaskType> TaskTypes
		{
			get
			{
				return this._TaskTypes;
			}
			set
			{
				this._TaskTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaskTypes(TaskType entity)
		{
			this.SendPropertyChanging();
			entity.Task = this;
		}
		
		private void detach_TaskTypes(TaskType entity)
		{
			this.SendPropertyChanging();
			entity.Task = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskType")]
	public partial class TaskType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type;
		
		private string _Description;
		
		private string _ModuleName;
		
		private EntityRef<Task> _Task;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    #endregion
		
		public TaskType()
		{
			this._Task = default(EntityRef<Task>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					if (this._Task.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="VarChar(16)", CanBeNull=false)]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Task_TaskType", Storage="_Task", ThisKey="Type", OtherKey="Type", IsForeignKey=true)]
		public Task Task
		{
			get
			{
				return this._Task.Entity;
			}
			set
			{
				Task previousValue = this._Task.Entity;
				if (((previousValue != value) 
							|| (this._Task.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Task.Entity = null;
						previousValue.TaskTypes.Remove(this);
					}
					this._Task.Entity = value;
					if ((value != null))
					{
						value.TaskTypes.Add(this);
						this._Type = value.Type;
					}
					else
					{
						this._Type = default(int);
					}
					this.SendPropertyChanged("Task");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Requests")]
	public partial class Request : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResearchId;
		
		private int _Type;
		
		private int _State;
		
		private string _Result;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResearchIdChanging(int value);
    partial void OnResearchIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    #endregion
		
		public Request()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchId", DbType="Int NOT NULL")]
		public int ResearchId
		{
			get
			{
				return this._ResearchId;
			}
			set
			{
				if ((this._ResearchId != value))
				{
					this.OnResearchIdChanging(value);
					this.SendPropertyChanging();
					this._ResearchId = value;
					this.SendPropertyChanged("ResearchId");
					this.OnResearchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="VarChar(MAX)")]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResearchesVmData")]
	public partial class ResearchesVmData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _VmName;
		
		private int _VmType;
		
		private int _VmSystem;
		
		private int _VmEnvType;
		
		private string _VmEnvMac;
		
		private string _VmEnvIp;
		
		private string _VmDescription;
		
		private EntityRef<Research> _Research;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnVmNameChanging(string value);
    partial void OnVmNameChanged();
    partial void OnVmTypeChanging(int value);
    partial void OnVmTypeChanged();
    partial void OnVmSystemChanging(int value);
    partial void OnVmSystemChanged();
    partial void OnVmEnvTypeChanging(int value);
    partial void OnVmEnvTypeChanged();
    partial void OnVmEnvMacChanging(string value);
    partial void OnVmEnvMacChanged();
    partial void OnVmEnvIpChanging(string value);
    partial void OnVmEnvIpChanged();
    partial void OnVmDescriptionChanging(string value);
    partial void OnVmDescriptionChanged();
    #endregion
		
		public ResearchesVmData()
		{
			this._Research = default(EntityRef<Research>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Research.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VmName
		{
			get
			{
				return this._VmName;
			}
			set
			{
				if ((this._VmName != value))
				{
					this.OnVmNameChanging(value);
					this.SendPropertyChanging();
					this._VmName = value;
					this.SendPropertyChanged("VmName");
					this.OnVmNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmType", DbType="Int NOT NULL")]
		public int VmType
		{
			get
			{
				return this._VmType;
			}
			set
			{
				if ((this._VmType != value))
				{
					this.OnVmTypeChanging(value);
					this.SendPropertyChanging();
					this._VmType = value;
					this.SendPropertyChanged("VmType");
					this.OnVmTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmSystem", DbType="Int NOT NULL")]
		public int VmSystem
		{
			get
			{
				return this._VmSystem;
			}
			set
			{
				if ((this._VmSystem != value))
				{
					this.OnVmSystemChanging(value);
					this.SendPropertyChanging();
					this._VmSystem = value;
					this.SendPropertyChanged("VmSystem");
					this.OnVmSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmEnvType", DbType="Int NOT NULL")]
		public int VmEnvType
		{
			get
			{
				return this._VmEnvType;
			}
			set
			{
				if ((this._VmEnvType != value))
				{
					this.OnVmEnvTypeChanging(value);
					this.SendPropertyChanging();
					this._VmEnvType = value;
					this.SendPropertyChanged("VmEnvType");
					this.OnVmEnvTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmEnvMac", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VmEnvMac
		{
			get
			{
				return this._VmEnvMac;
			}
			set
			{
				if ((this._VmEnvMac != value))
				{
					this.OnVmEnvMacChanging(value);
					this.SendPropertyChanging();
					this._VmEnvMac = value;
					this.SendPropertyChanged("VmEnvMac");
					this.OnVmEnvMacChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmEnvIp", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VmEnvIp
		{
			get
			{
				return this._VmEnvIp;
			}
			set
			{
				if ((this._VmEnvIp != value))
				{
					this.OnVmEnvIpChanging(value);
					this.SendPropertyChanging();
					this._VmEnvIp = value;
					this.SendPropertyChanged("VmEnvIp");
					this.OnVmEnvIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmDescription", DbType="VarChar(MAX)")]
		public string VmDescription
		{
			get
			{
				return this._VmDescription;
			}
			set
			{
				if ((this._VmDescription != value))
				{
					this.OnVmDescriptionChanging(value);
					this.SendPropertyChanging();
					this._VmDescription = value;
					this.SendPropertyChanged("VmDescription");
					this.OnVmDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Research_ResearchesVmData", Storage="_Research", ThisKey="Id", OtherKey="ResearchVmData", IsForeignKey=true)]
		public Research Research
		{
			get
			{
				return this._Research.Entity;
			}
			set
			{
				Research previousValue = this._Research.Entity;
				if (((previousValue != value) 
							|| (this._Research.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Research.Entity = null;
						previousValue.ResearchesVmDatas.Remove(this);
					}
					this._Research.Entity = value;
					if ((value != null))
					{
						value.ResearchesVmDatas.Add(this);
						this._Id = value.ResearchVmData;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Research");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Researches")]
	public partial class Research : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _MlwrId;
		
		private int _VmId;
		
		private int _ResearchVmData;
		
		private string _ResearchName;
		
		private int _State;
		
		private System.DateTime _CreatedDate;
		
		private int _Duration;
		
		private System.Nullable<System.DateTime> _StartedDate;
		
		private System.Nullable<System.DateTime> _StoppedDate;
		
		private System.Nullable<int> _TrafficFileReady;
		
		private string _TrafficFileName;
		
		private EntitySet<ResearchesState> _ResearchesStates;
		
		private EntitySet<ResearchesVmData> _ResearchesVmDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMlwrIdChanging(int value);
    partial void OnMlwrIdChanged();
    partial void OnVmIdChanging(int value);
    partial void OnVmIdChanged();
    partial void OnResearchVmDataChanging(int value);
    partial void OnResearchVmDataChanged();
    partial void OnResearchNameChanging(string value);
    partial void OnResearchNameChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnDurationChanging(int value);
    partial void OnDurationChanged();
    partial void OnStartedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedDateChanged();
    partial void OnStoppedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStoppedDateChanged();
    partial void OnTrafficFileReadyChanging(System.Nullable<int> value);
    partial void OnTrafficFileReadyChanged();
    partial void OnTrafficFileNameChanging(string value);
    partial void OnTrafficFileNameChanged();
    #endregion
		
		public Research()
		{
			this._ResearchesStates = new EntitySet<ResearchesState>(new Action<ResearchesState>(this.attach_ResearchesStates), new Action<ResearchesState>(this.detach_ResearchesStates));
			this._ResearchesVmDatas = new EntitySet<ResearchesVmData>(new Action<ResearchesVmData>(this.attach_ResearchesVmDatas), new Action<ResearchesVmData>(this.detach_ResearchesVmDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int NOT NULL")]
		public int MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this.OnMlwrIdChanging(value);
					this.SendPropertyChanging();
					this._MlwrId = value;
					this.SendPropertyChanged("MlwrId");
					this.OnMlwrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmId", DbType="Int NOT NULL")]
		public int VmId
		{
			get
			{
				return this._VmId;
			}
			set
			{
				if ((this._VmId != value))
				{
					this.OnVmIdChanging(value);
					this.SendPropertyChanging();
					this._VmId = value;
					this.SendPropertyChanged("VmId");
					this.OnVmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchVmData", DbType="Int NOT NULL")]
		public int ResearchVmData
		{
			get
			{
				return this._ResearchVmData;
			}
			set
			{
				if ((this._ResearchVmData != value))
				{
					this.OnResearchVmDataChanging(value);
					this.SendPropertyChanging();
					this._ResearchVmData = value;
					this.SendPropertyChanged("ResearchVmData");
					this.OnResearchVmDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ResearchName
		{
			get
			{
				return this._ResearchName;
			}
			set
			{
				if ((this._ResearchName != value))
				{
					this.OnResearchNameChanging(value);
					this.SendPropertyChanging();
					this._ResearchName = value;
					this.SendPropertyChanged("ResearchName");
					this.OnResearchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartedDate
		{
			get
			{
				return this._StartedDate;
			}
			set
			{
				if ((this._StartedDate != value))
				{
					this.OnStartedDateChanging(value);
					this.SendPropertyChanging();
					this._StartedDate = value;
					this.SendPropertyChanged("StartedDate");
					this.OnStartedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoppedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StoppedDate
		{
			get
			{
				return this._StoppedDate;
			}
			set
			{
				if ((this._StoppedDate != value))
				{
					this.OnStoppedDateChanging(value);
					this.SendPropertyChanging();
					this._StoppedDate = value;
					this.SendPropertyChanged("StoppedDate");
					this.OnStoppedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficFileReady", DbType="Int")]
		public System.Nullable<int> TrafficFileReady
		{
			get
			{
				return this._TrafficFileReady;
			}
			set
			{
				if ((this._TrafficFileReady != value))
				{
					this.OnTrafficFileReadyChanging(value);
					this.SendPropertyChanging();
					this._TrafficFileReady = value;
					this.SendPropertyChanged("TrafficFileReady");
					this.OnTrafficFileReadyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrafficFileName", DbType="VarChar(MAX)")]
		public string TrafficFileName
		{
			get
			{
				return this._TrafficFileName;
			}
			set
			{
				if ((this._TrafficFileName != value))
				{
					this.OnTrafficFileNameChanging(value);
					this.SendPropertyChanging();
					this._TrafficFileName = value;
					this.SendPropertyChanged("TrafficFileName");
					this.OnTrafficFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Research_ResearchesState", Storage="_ResearchesStates", ThisKey="State", OtherKey="State")]
		public EntitySet<ResearchesState> ResearchesStates
		{
			get
			{
				return this._ResearchesStates;
			}
			set
			{
				this._ResearchesStates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Research_ResearchesVmData", Storage="_ResearchesVmDatas", ThisKey="ResearchVmData", OtherKey="Id")]
		public EntitySet<ResearchesVmData> ResearchesVmDatas
		{
			get
			{
				return this._ResearchesVmDatas;
			}
			set
			{
				this._ResearchesVmDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResearchesStates(ResearchesState entity)
		{
			this.SendPropertyChanging();
			entity.Research = this;
		}
		
		private void detach_ResearchesStates(ResearchesState entity)
		{
			this.SendPropertyChanging();
			entity.Research = null;
		}
		
		private void attach_ResearchesVmDatas(ResearchesVmData entity)
		{
			this.SendPropertyChanging();
			entity.Research = this;
		}
		
		private void detach_ResearchesVmDatas(ResearchesVmData entity)
		{
			this.SendPropertyChanging();
			entity.Research = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Proc]")]
	public partial class Proc
	{
		
		private int _rschID;
		
		private string _procName;
		
		private System.Nullable<int> _pid1;
		
		private System.Nullable<int> _pid2;
		
		private string _status;
		
		private System.Nullable<int> _streamsCount;
		
		public Proc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschID", DbType="Int NOT NULL")]
		public int rschID
		{
			get
			{
				return this._rschID;
			}
			set
			{
				if ((this._rschID != value))
				{
					this._rschID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string procName
		{
			get
			{
				return this._procName;
			}
			set
			{
				if ((this._procName != value))
				{
					this._procName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid1", DbType="Int")]
		public System.Nullable<int> pid1
		{
			get
			{
				return this._pid1;
			}
			set
			{
				if ((this._pid1 != value))
				{
					this._pid1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid2", DbType="Int")]
		public System.Nullable<int> pid2
		{
			get
			{
				return this._pid2;
			}
			set
			{
				if ((this._pid2 != value))
				{
					this._pid2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(MAX)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamsCount", DbType="Int")]
		public System.Nullable<int> streamsCount
		{
			get
			{
				return this._streamsCount;
			}
			set
			{
				if ((this._streamsCount != value))
				{
					this._streamsCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegTest")]
	public partial class RegTest
	{
		
		private int _rschID;
		
		private string _path;
		
		private string _event;
		
		public RegTest()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschID", DbType="Int NOT NULL")]
		public int rschID
		{
			get
			{
				return this._rschID;
			}
			set
			{
				if ((this._rschID != value))
				{
					this._rschID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(MAX)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this._path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="VarChar(50)")]
		public string @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this._event = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ports")]
	public partial class Ports
	{
		
		private System.Nullable<int> _rschID;
		
		private System.Nullable<int> _port;
		
		private string _type;
		
		private string _status;
		
		private string _destanation;
		
		public Ports()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschID", DbType="Int")]
		public System.Nullable<int> rschID
		{
			get
			{
				return this._rschID;
			}
			set
			{
				if ((this._rschID != value))
				{
					this._rschID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="Int")]
		public System.Nullable<int> port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this._port = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this._type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destanation", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string destanation
		{
			get
			{
				return this._destanation;
			}
			set
			{
				if ((this._destanation != value))
				{
					this._destanation = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FileList")]
	public partial class FileList
	{
		
		private int _rschId;
		
		private string _dt;
		
		private string _sourse;
		
		private string _description;
		
		public FileList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschId", DbType="Int NOT NULL")]
		public int rschId
		{
			get
			{
				return this._rschId;
			}
			set
			{
				if ((this._rschId != value))
				{
					this._rschId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dt", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string dt
		{
			get
			{
				return this._dt;
			}
			set
			{
				if ((this._dt != value))
				{
					this._dt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourse", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sourse
		{
			get
			{
				return this._sourse;
			}
			set
			{
				if ((this._sourse != value))
				{
					this._sourse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrTargeting")]
	public partial class MlwrTargeting
	{
		
		private int _MlwrId;
		
		private string _TargetingValue;
		
		public MlwrTargeting()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int NOT NULL")]
		public int MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this._MlwrId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetingValue", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TargetingValue
		{
			get
			{
				return this._TargetingValue;
			}
			set
			{
				if ((this._TargetingValue != value))
				{
					this._TargetingValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrFeature")]
	public partial class MlwrFeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _MlwrId;
		
		private string _FClass;
		
		private string _SClass;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMlwrIdChanging(int value);
    partial void OnMlwrIdChanged();
    partial void OnFClassChanging(string value);
    partial void OnFClassChanged();
    partial void OnSClassChanging(string value);
    partial void OnSClassChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public MlwrFeature()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int NOT NULL")]
		public int MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this.OnMlwrIdChanging(value);
					this.SendPropertyChanging();
					this._MlwrId = value;
					this.SendPropertyChanged("MlwrId");
					this.OnMlwrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FClass", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FClass
		{
			get
			{
				return this._FClass;
			}
			set
			{
				if ((this._FClass != value))
				{
					this.OnFClassChanging(value);
					this.SendPropertyChanging();
					this._FClass = value;
					this.SendPropertyChanged("FClass");
					this.OnFClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SClass", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SClass
		{
			get
			{
				return this._SClass;
			}
			set
			{
				if ((this._SClass != value))
				{
					this.OnSClassChanging(value);
					this.SendPropertyChanging();
					this._SClass = value;
					this.SendPropertyChanged("SClass");
					this.OnSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Monitor")]
	public partial class Monitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RschId;
		
		private string _FClass;
		
		private string _SClass;
		
		private string _Value;
		
		private string _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRschIdChanging(int value);
    partial void OnRschIdChanged();
    partial void OnFClassChanging(string value);
    partial void OnFClassChanged();
    partial void OnSClassChanging(string value);
    partial void OnSClassChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public Monitor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RschId", DbType="Int NOT NULL")]
		public int RschId
		{
			get
			{
				return this._RschId;
			}
			set
			{
				if ((this._RschId != value))
				{
					this.OnRschIdChanging(value);
					this.SendPropertyChanging();
					this._RschId = value;
					this.SendPropertyChanged("RschId");
					this.OnRschIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FClass", DbType="NVarChar(MAX)")]
		public string FClass
		{
			get
			{
				return this._FClass;
			}
			set
			{
				if ((this._FClass != value))
				{
					this.OnFClassChanging(value);
					this.SendPropertyChanging();
					this._FClass = value;
					this.SendPropertyChanged("FClass");
					this.OnFClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SClass", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SClass
		{
			get
			{
				return this._SClass;
			}
			set
			{
				if ((this._SClass != value))
				{
					this.OnSClassChanging(value);
					this.SendPropertyChanging();
					this._SClass = value;
					this.SendPropertyChanged("SClass");
					this.OnSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RschEvents")]
	public partial class RschEvents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RschId;
		
		private string _FClass;
		
		private string _SClass;
		
		private string _Value;
		
		private string _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRschIdChanging(int value);
    partial void OnRschIdChanged();
    partial void OnFClassChanging(string value);
    partial void OnFClassChanged();
    partial void OnSClassChanging(string value);
    partial void OnSClassChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTimeStampChanging(string value);
    partial void OnTimeStampChanged();
    #endregion
		
		public RschEvents()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RschId", DbType="Int NOT NULL")]
		public int RschId
		{
			get
			{
				return this._RschId;
			}
			set
			{
				if ((this._RschId != value))
				{
					this.OnRschIdChanging(value);
					this.SendPropertyChanging();
					this._RschId = value;
					this.SendPropertyChanged("RschId");
					this.OnRschIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FClass", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FClass
		{
			get
			{
				return this._FClass;
			}
			set
			{
				if ((this._FClass != value))
				{
					this.OnFClassChanging(value);
					this.SendPropertyChanging();
					this._FClass = value;
					this.SendPropertyChanged("FClass");
					this.OnFClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SClass", DbType="VarChar(MAX)")]
		public string SClass
		{
			get
			{
				return this._SClass;
			}
			set
			{
				if ((this._SClass != value))
				{
					this.OnSClassChanging(value);
					this.SendPropertyChanging();
					this._SClass = value;
					this.SendPropertyChanged("SClass");
					this.OnSClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="NVarChar(MAX)")]
		public string TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RootClassificationScheme")]
	public partial class RootClassificationScheme
	{
		
		private string _RootElementOfClassification;
		
		private string _SecondaryElementOfClassification;
		
		public RootClassificationScheme()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootElementOfClassification", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RootElementOfClassification
		{
			get
			{
				return this._RootElementOfClassification;
			}
			set
			{
				if ((this._RootElementOfClassification != value))
				{
					this._RootElementOfClassification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryElementOfClassification", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SecondaryElementOfClassification
		{
			get
			{
				return this._SecondaryElementOfClassification;
			}
			set
			{
				if ((this._SecondaryElementOfClassification != value))
				{
					this._SecondaryElementOfClassification = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tasks")]
	public partial class Tasks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ResearchId;
		
		private int _Type;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnResearchIdChanging(int value);
    partial void OnResearchIdChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Tasks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchId", DbType="Int NOT NULL")]
		public int ResearchId
		{
			get
			{
				return this._ResearchId;
			}
			set
			{
				if ((this._ResearchId != value))
				{
					this.OnResearchIdChanging(value);
					this.SendPropertyChanging();
					this._ResearchId = value;
					this.SendPropertyChanged("ResearchId");
					this.OnResearchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TasksClassification")]
	public partial class TasksClassification
	{
		
		private int _TaskClassType;
		
		private string _Description;
		
		private int _TaskType;
		
		public TasksClassification()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskClassType", DbType="Int NOT NULL")]
		public int TaskClassType
		{
			get
			{
				return this._TaskClassType;
			}
			set
			{
				if ((this._TaskClassType != value))
				{
					this._TaskClassType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskType", DbType="Int NOT NULL")]
		public int TaskType
		{
			get
			{
				return this._TaskType;
			}
			set
			{
				if ((this._TaskType != value))
				{
					this._TaskType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaskType")]
	public partial class TaskType1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public TaskType1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventsEventDescriptions")]
	public partial class EventsEventDescriptions
	{
		
		private int _EventID;
		
		private string _EventsEventDescription;
		
		public EventsEventDescriptions()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventID", DbType="Int NOT NULL")]
		public int EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this._EventID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventsEventDescription", DbType="VarChar(MAX)")]
		public string EventsEventDescription
		{
			get
			{
				return this._EventsEventDescription;
			}
			set
			{
				if ((this._EventsEventDescription != value))
				{
					this._EventsEventDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventsModulesDescriptions")]
	public partial class EventsModulesDescriptions
	{
		
		private int _EventModuleID;
		
		private string _Description;
		
		public EventsModulesDescriptions()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventModuleID", DbType="Int NOT NULL")]
		public int EventModuleID
		{
			get
			{
				return this._EventModuleID;
			}
			set
			{
				if ((this._EventModuleID != value))
				{
					this._EventModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Regs")]
	public partial class Regs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _KeyName;
		
		private long _KeyIndex;
		
		private System.Nullable<long> _Parent;
		
		private int _RschID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnKeyNameChanging(string value);
    partial void OnKeyNameChanged();
    partial void OnKeyIndexChanging(long value);
    partial void OnKeyIndexChanged();
    partial void OnParentChanging(System.Nullable<long> value);
    partial void OnParentChanged();
    partial void OnRschIDChanging(int value);
    partial void OnRschIDChanged();
    #endregion
		
		public Regs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string KeyName
		{
			get
			{
				return this._KeyName;
			}
			set
			{
				if ((this._KeyName != value))
				{
					this.OnKeyNameChanging(value);
					this.SendPropertyChanging();
					this._KeyName = value;
					this.SendPropertyChanged("KeyName");
					this.OnKeyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyIndex", DbType="BigInt NOT NULL")]
		public long KeyIndex
		{
			get
			{
				return this._KeyIndex;
			}
			set
			{
				if ((this._KeyIndex != value))
				{
					this.OnKeyIndexChanging(value);
					this.SendPropertyChanging();
					this._KeyIndex = value;
					this.SendPropertyChanged("KeyIndex");
					this.OnKeyIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parent", DbType="BigInt")]
		public System.Nullable<long> Parent
		{
			get
			{
				return this._Parent;
			}
			set
			{
				if ((this._Parent != value))
				{
					this.OnParentChanging(value);
					this.SendPropertyChanging();
					this._Parent = value;
					this.SendPropertyChanged("Parent");
					this.OnParentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RschID", DbType="Int NOT NULL")]
		public int RschID
		{
			get
			{
				return this._RschID;
			}
			set
			{
				if ((this._RschID != value))
				{
					this.OnRschIDChanging(value);
					this.SendPropertyChanging();
					this._RschID = value;
					this.SendPropertyChanged("RschID");
					this.OnRschIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procs")]
	public partial class Procs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private int _Pid1;
		
		private System.Nullable<int> _Pid2;
		
		private int _Count;
		
		private int _RschId;
		
		private string _EventAdditionalInfo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPid1Changing(int value);
    partial void OnPid1Changed();
    partial void OnPid2Changing(System.Nullable<int> value);
    partial void OnPid2Changed();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    partial void OnRschIdChanging(int value);
    partial void OnRschIdChanged();
    partial void OnEventAdditionalInfoChanging(string value);
    partial void OnEventAdditionalInfoChanged();
    #endregion
		
		public Procs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid1", DbType="Int NOT NULL")]
		public int Pid1
		{
			get
			{
				return this._Pid1;
			}
			set
			{
				if ((this._Pid1 != value))
				{
					this.OnPid1Changing(value);
					this.SendPropertyChanging();
					this._Pid1 = value;
					this.SendPropertyChanged("Pid1");
					this.OnPid1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pid2", DbType="Int")]
		public System.Nullable<int> Pid2
		{
			get
			{
				return this._Pid2;
			}
			set
			{
				if ((this._Pid2 != value))
				{
					this.OnPid2Changing(value);
					this.SendPropertyChanging();
					this._Pid2 = value;
					this.SendPropertyChanged("Pid2");
					this.OnPid2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RschId", DbType="Int NOT NULL")]
		public int RschId
		{
			get
			{
				return this._RschId;
			}
			set
			{
				if ((this._RschId != value))
				{
					this.OnRschIdChanging(value);
					this.SendPropertyChanging();
					this._RschId = value;
					this.SendPropertyChanged("RschId");
					this.OnRschIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventAdditionalInfo", DbType="VarChar(MAX)")]
		public string EventAdditionalInfo
		{
			get
			{
				return this._EventAdditionalInfo;
			}
			set
			{
				if ((this._EventAdditionalInfo != value))
				{
					this.OnEventAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._EventAdditionalInfo = value;
					this.SendPropertyChanged("EventAdditionalInfo");
					this.OnEventAdditionalInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModulesVsEvents")]
	public partial class ModulesVsEvents
	{
		
		private int _Event;
		
		private int _Module;
		
		public ModulesVsEvents()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="Int NOT NULL")]
		public int Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this._Event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="Int NOT NULL")]
		public int Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this._Module = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DirectoryOfEvents")]
	public partial class DirectoryOfEvents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _significance;
		
		private int _module;
		
		private int _event;
		
		private string _who;
		
		private string _dest;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnsignificanceChanging(int value);
    partial void OnsignificanceChanged();
    partial void OnmoduleChanging(int value);
    partial void OnmoduleChanged();
    partial void OneventChanging(int value);
    partial void OneventChanged();
    partial void OnwhoChanging(string value);
    partial void OnwhoChanged();
    partial void OndestChanging(string value);
    partial void OndestChanged();
    #endregion
		
		public DirectoryOfEvents()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_significance", DbType="Int NOT NULL")]
		public int significance
		{
			get
			{
				return this._significance;
			}
			set
			{
				if ((this._significance != value))
				{
					this.OnsignificanceChanging(value);
					this.SendPropertyChanging();
					this._significance = value;
					this.SendPropertyChanged("significance");
					this.OnsignificanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int NOT NULL")]
		public int module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL")]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_who", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string who
		{
			get
			{
				return this._who;
			}
			set
			{
				if ((this._who != value))
				{
					this.OnwhoChanging(value);
					this.SendPropertyChanging();
					this._who = value;
					this.SendPropertyChanged("who");
					this.OnwhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dest", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string dest
		{
			get
			{
				return this._dest;
			}
			set
			{
				if ((this._dest != value))
				{
					this.OndestChanging(value);
					this.SendPropertyChanging();
					this._dest = value;
					this.SendPropertyChanged("dest");
					this.OndestChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrComments")]
	public partial class MlwrComments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MlwrId;
		
		private string _CommentValue;
		
		private int _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMlwrIdChanging(int value);
    partial void OnMlwrIdChanged();
    partial void OnCommentValueChanging(string value);
    partial void OnCommentValueChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    #endregion
		
		public MlwrComments()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int NOT NULL")]
		public int MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this.OnMlwrIdChanging(value);
					this.SendPropertyChanging();
					this._MlwrId = value;
					this.SendPropertyChanged("MlwrId");
					this.OnMlwrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentValue", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CommentValue
		{
			get
			{
				return this._CommentValue;
			}
			set
			{
				if ((this._CommentValue != value))
				{
					this.OnCommentValueChanging(value);
					this.SendPropertyChanging();
					this._CommentValue = value;
					this.SendPropertyChanged("CommentValue");
					this.OnCommentValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PortList")]
	public partial class PortList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<int> _rschID;
		
		private string _port;
		
		private string _type;
		
		private string _status;
		
		private string _destination;
		
		private string _process;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnrschIDChanging(System.Nullable<int> value);
    partial void OnrschIDChanged();
    partial void OnportChanging(string value);
    partial void OnportChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OndestinationChanging(string value);
    partial void OndestinationChanged();
    partial void OnprocessChanging(string value);
    partial void OnprocessChanged();
    #endregion
		
		public PortList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschID", DbType="Int")]
		public System.Nullable<int> rschID
		{
			get
			{
				return this._rschID;
			}
			set
			{
				if ((this._rschID != value))
				{
					this.OnrschIDChanging(value);
					this.SendPropertyChanging();
					this._rschID = value;
					this.SendPropertyChanged("rschID");
					this.OnrschIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_port", DbType="VarChar(MAX)")]
		public string port
		{
			get
			{
				return this._port;
			}
			set
			{
				if ((this._port != value))
				{
					this.OnportChanging(value);
					this.SendPropertyChanging();
					this._port = value;
					this.SendPropertyChanged("port");
					this.OnportChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(MAX)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(MAX)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_destination", DbType="VarChar(MAX)")]
		public string destination
		{
			get
			{
				return this._destination;
			}
			set
			{
				if ((this._destination != value))
				{
					this.OndestinationChanging(value);
					this.SendPropertyChanging();
					this._destination = value;
					this.SendPropertyChanged("destination");
					this.OndestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_process", DbType="VarChar(MAX)")]
		public string process
		{
			get
			{
				return this._process;
			}
			set
			{
				if ((this._process != value))
				{
					this.OnprocessChanging(value);
					this.SendPropertyChanging();
					this._process = value;
					this.SendPropertyChanged("process");
					this.OnprocessChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrReport")]
	public partial class MlwrReport
	{
		
		private long _Id;
		
		private long _mlwrId;
		
		private string _message;
		
		public MlwrReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mlwrId", DbType="BigInt NOT NULL")]
		public long mlwrId
		{
			get
			{
				return this._mlwrId;
			}
			set
			{
				if ((this._mlwrId != value))
				{
					this._mlwrId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="NChar(512) NOT NULL", CanBeNull=false)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this._message = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stats")]
	public partial class stats
	{
		
		private string _cpu;
		
		private string _cpu0;
		
		private string _cpu1;
		
		private string _cpu2;
		
		private string _cpu3;
		
		private string _meminfo;
		
		public stats()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpu", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string cpu
		{
			get
			{
				return this._cpu;
			}
			set
			{
				if ((this._cpu != value))
				{
					this._cpu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpu0", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string cpu0
		{
			get
			{
				return this._cpu0;
			}
			set
			{
				if ((this._cpu0 != value))
				{
					this._cpu0 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpu1", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string cpu1
		{
			get
			{
				return this._cpu1;
			}
			set
			{
				if ((this._cpu1 != value))
				{
					this._cpu1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpu2", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string cpu2
		{
			get
			{
				return this._cpu2;
			}
			set
			{
				if ((this._cpu2 != value))
				{
					this._cpu2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cpu3", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string cpu3
		{
			get
			{
				return this._cpu3;
			}
			set
			{
				if ((this._cpu3 != value))
				{
					this._cpu3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meminfo", DbType="NVarChar(12)")]
		public string meminfo
		{
			get
			{
				return this._meminfo;
			}
			set
			{
				if ((this._meminfo != value))
				{
					this._meminfo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Files")]
	public partial class Files : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private bool _IsDir;
		
		private int _RschId;
		
		private string _PathPrefix;
		
		private string _EventAdditionalInfo;
		
		private System.Nullable<int> _fileindex;
		
		private System.Nullable<int> _parent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsDirChanging(bool value);
    partial void OnIsDirChanged();
    partial void OnRschIdChanging(int value);
    partial void OnRschIdChanged();
    partial void OnPathPrefixChanging(string value);
    partial void OnPathPrefixChanged();
    partial void OnEventAdditionalInfoChanging(string value);
    partial void OnEventAdditionalInfoChanged();
    partial void OnfileindexChanging(System.Nullable<int> value);
    partial void OnfileindexChanged();
    partial void OnparentChanging(System.Nullable<int> value);
    partial void OnparentChanged();
    #endregion
		
		public Files()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDir", DbType="Bit NOT NULL")]
		public bool IsDir
		{
			get
			{
				return this._IsDir;
			}
			set
			{
				if ((this._IsDir != value))
				{
					this.OnIsDirChanging(value);
					this.SendPropertyChanging();
					this._IsDir = value;
					this.SendPropertyChanged("IsDir");
					this.OnIsDirChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RschId", DbType="Int NOT NULL")]
		public int RschId
		{
			get
			{
				return this._RschId;
			}
			set
			{
				if ((this._RschId != value))
				{
					this.OnRschIdChanging(value);
					this.SendPropertyChanging();
					this._RschId = value;
					this.SendPropertyChanged("RschId");
					this.OnRschIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathPrefix", DbType="VarChar(MAX)")]
		public string PathPrefix
		{
			get
			{
				return this._PathPrefix;
			}
			set
			{
				if ((this._PathPrefix != value))
				{
					this.OnPathPrefixChanging(value);
					this.SendPropertyChanging();
					this._PathPrefix = value;
					this.SendPropertyChanged("PathPrefix");
					this.OnPathPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventAdditionalInfo", DbType="VarChar(MAX)")]
		public string EventAdditionalInfo
		{
			get
			{
				return this._EventAdditionalInfo;
			}
			set
			{
				if ((this._EventAdditionalInfo != value))
				{
					this.OnEventAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._EventAdditionalInfo = value;
					this.SendPropertyChanged("EventAdditionalInfo");
					this.OnEventAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileindex", DbType="Int")]
		public System.Nullable<int> fileindex
		{
			get
			{
				return this._fileindex;
			}
			set
			{
				if ((this._fileindex != value))
				{
					this.OnfileindexChanging(value);
					this.SendPropertyChanging();
					this._fileindex = value;
					this.SendPropertyChanged("fileindex");
					this.OnfileindexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parent", DbType="Int")]
		public System.Nullable<int> parent
		{
			get
			{
				return this._parent;
			}
			set
			{
				if ((this._parent != value))
				{
					this.OnparentChanging(value);
					this.SendPropertyChanging();
					this._parent = value;
					this.SendPropertyChanged("parent");
					this.OnparentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commands")]
	public partial class Commands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Command;
		
		private string _CommandParams;
		
		private long _CommandStartTime;
		
		private int _RschId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCommandChanging(string value);
    partial void OnCommandChanged();
    partial void OnCommandParamsChanging(string value);
    partial void OnCommandParamsChanged();
    partial void OnCommandStartTimeChanging(long value);
    partial void OnCommandStartTimeChanged();
    partial void OnRschIdChanging(int value);
    partial void OnRschIdChanged();
    #endregion
		
		public Commands()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Command", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Command
		{
			get
			{
				return this._Command;
			}
			set
			{
				if ((this._Command != value))
				{
					this.OnCommandChanging(value);
					this.SendPropertyChanging();
					this._Command = value;
					this.SendPropertyChanged("Command");
					this.OnCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandParams", DbType="NVarChar(MAX)")]
		public string CommandParams
		{
			get
			{
				return this._CommandParams;
			}
			set
			{
				if ((this._CommandParams != value))
				{
					this.OnCommandParamsChanging(value);
					this.SendPropertyChanging();
					this._CommandParams = value;
					this.SendPropertyChanged("CommandParams");
					this.OnCommandParamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommandStartTime", DbType="BigInt NOT NULL")]
		public long CommandStartTime
		{
			get
			{
				return this._CommandStartTime;
			}
			set
			{
				if ((this._CommandStartTime != value))
				{
					this.OnCommandStartTimeChanging(value);
					this.SendPropertyChanging();
					this._CommandStartTime = value;
					this.SendPropertyChanged("CommandStartTime");
					this.OnCommandStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RschId", DbType="Int NOT NULL")]
		public int RschId
		{
			get
			{
				return this._RschId;
			}
			set
			{
				if ((this._RschId != value))
				{
					this.OnRschIdChanging(value);
					this.SendPropertyChanging();
					this._RschId = value;
					this.SendPropertyChanged("RschId");
					this.OnRschIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StopEvents")]
	public partial class StopEvents : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _module;
		
		private int _event;
		
		private string _who;
		
		private string _dest;
		
		private int _rschId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnmoduleChanging(int value);
    partial void OnmoduleChanged();
    partial void OneventChanging(int value);
    partial void OneventChanged();
    partial void OnwhoChanging(string value);
    partial void OnwhoChanged();
    partial void OndestChanging(string value);
    partial void OndestChanged();
    partial void OnrschIdChanging(int value);
    partial void OnrschIdChanged();
    #endregion
		
		public StopEvents()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int NOT NULL")]
		public int module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL")]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_who", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string who
		{
			get
			{
				return this._who;
			}
			set
			{
				if ((this._who != value))
				{
					this.OnwhoChanging(value);
					this.SendPropertyChanging();
					this._who = value;
					this.SendPropertyChanged("who");
					this.OnwhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dest", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string dest
		{
			get
			{
				return this._dest;
			}
			set
			{
				if ((this._dest != value))
				{
					this.OndestChanging(value);
					this.SendPropertyChanging();
					this._dest = value;
					this.SendPropertyChanged("dest");
					this.OndestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschId", DbType="Int NOT NULL")]
		public int rschId
		{
			get
			{
				return this._rschId;
			}
			set
			{
				if ((this._rschId != value))
				{
					this.OnrschIdChanging(value);
					this.SendPropertyChanging();
					this._rschId = value;
					this.SendPropertyChanged("rschId");
					this.OnrschIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StopRschStatus")]
	public partial class StopRschStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _stopStatus;
		
		private int _rschId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnstopStatusChanging(string value);
    partial void OnstopStatusChanged();
    partial void OnrschIdChanging(int value);
    partial void OnrschIdChanged();
    #endregion
		
		public StopRschStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stopStatus", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string stopStatus
		{
			get
			{
				return this._stopStatus;
			}
			set
			{
				if ((this._stopStatus != value))
				{
					this.OnstopStatusChanging(value);
					this.SendPropertyChanging();
					this._stopStatus = value;
					this.SendPropertyChanged("stopStatus");
					this.OnstopStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschId", DbType="Int NOT NULL")]
		public int rschId
		{
			get
			{
				return this._rschId;
			}
			set
			{
				if ((this._rschId != value))
				{
					this.OnrschIdChanging(value);
					this.SendPropertyChanging();
					this._rschId = value;
					this.SendPropertyChanged("rschId");
					this.OnrschIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.events")]
	public partial class events : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _module;
		
		private int _event;
		
		private string _who;
		
		private string _dest;
		
		private string _descr;
		
		private int _rschId;
		
		private System.Nullable<int> _pid1;
		
		private System.Nullable<int> _pid2;
		
		private string _adddata1;
		
		private string _adddata2;
		
		private System.Nullable<System.DateTime> _timeofevent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnmoduleChanging(int value);
    partial void OnmoduleChanged();
    partial void OneventChanging(int value);
    partial void OneventChanged();
    partial void OnwhoChanging(string value);
    partial void OnwhoChanged();
    partial void OndestChanging(string value);
    partial void OndestChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void OnrschIdChanging(int value);
    partial void OnrschIdChanged();
    partial void Onpid1Changing(System.Nullable<int> value);
    partial void Onpid1Changed();
    partial void Onpid2Changing(System.Nullable<int> value);
    partial void Onpid2Changed();
    partial void Onadddata1Changing(string value);
    partial void Onadddata1Changed();
    partial void Onadddata2Changing(string value);
    partial void Onadddata2Changed();
    partial void OntimeofeventChanging(System.Nullable<System.DateTime> value);
    partial void OntimeofeventChanged();
    #endregion
		
		public events()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int NOT NULL")]
		public int module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL")]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_who", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string who
		{
			get
			{
				return this._who;
			}
			set
			{
				if ((this._who != value))
				{
					this.OnwhoChanging(value);
					this.SendPropertyChanging();
					this._who = value;
					this.SendPropertyChanged("who");
					this.OnwhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dest", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string dest
		{
			get
			{
				return this._dest;
			}
			set
			{
				if ((this._dest != value))
				{
					this.OndestChanging(value);
					this.SendPropertyChanging();
					this._dest = value;
					this.SendPropertyChanged("dest");
					this.OndestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(150)")]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschId", DbType="Int NOT NULL")]
		public int rschId
		{
			get
			{
				return this._rschId;
			}
			set
			{
				if ((this._rschId != value))
				{
					this.OnrschIdChanging(value);
					this.SendPropertyChanging();
					this._rschId = value;
					this.SendPropertyChanged("rschId");
					this.OnrschIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid1", DbType="Int")]
		public System.Nullable<int> pid1
		{
			get
			{
				return this._pid1;
			}
			set
			{
				if ((this._pid1 != value))
				{
					this.Onpid1Changing(value);
					this.SendPropertyChanging();
					this._pid1 = value;
					this.SendPropertyChanged("pid1");
					this.Onpid1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid2", DbType="Int")]
		public System.Nullable<int> pid2
		{
			get
			{
				return this._pid2;
			}
			set
			{
				if ((this._pid2 != value))
				{
					this.Onpid2Changing(value);
					this.SendPropertyChanging();
					this._pid2 = value;
					this.SendPropertyChanged("pid2");
					this.Onpid2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddata1", DbType="NChar(250)")]
		public string adddata1
		{
			get
			{
				return this._adddata1;
			}
			set
			{
				if ((this._adddata1 != value))
				{
					this.Onadddata1Changing(value);
					this.SendPropertyChanging();
					this._adddata1 = value;
					this.SendPropertyChanged("adddata1");
					this.Onadddata1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddata2", DbType="NChar(250)")]
		public string adddata2
		{
			get
			{
				return this._adddata2;
			}
			set
			{
				if ((this._adddata2 != value))
				{
					this.Onadddata2Changing(value);
					this.SendPropertyChanging();
					this._adddata2 = value;
					this.SendPropertyChanged("adddata2");
					this.Onadddata2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeofevent", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeofevent
		{
			get
			{
				return this._timeofevent;
			}
			set
			{
				if ((this._timeofevent != value))
				{
					this.OntimeofeventChanging(value);
					this.SendPropertyChanging();
					this._timeofevent = value;
					this.SendPropertyChanged("timeofevent");
					this.OntimeofeventChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vpodir")]
	public partial class vpodir
	{
		
		private double _Fs;
		
		private double _Net;
		
		private double _Reg;
		
		private double _Procs;
		
		public vpodir()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fs", DbType="Float NOT NULL")]
		public double Fs
		{
			get
			{
				return this._Fs;
			}
			set
			{
				if ((this._Fs != value))
				{
					this._Fs = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Net", DbType="Float NOT NULL")]
		public double Net
		{
			get
			{
				return this._Net;
			}
			set
			{
				if ((this._Net != value))
				{
					this._Net = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg", DbType="Float NOT NULL")]
		public double Reg
		{
			get
			{
				return this._Reg;
			}
			set
			{
				if ((this._Reg != value))
				{
					this._Reg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Procs", DbType="Float NOT NULL")]
		public double Procs
		{
			get
			{
				return this._Procs;
			}
			set
			{
				if ((this._Procs != value))
				{
					this._Procs = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vmusage")]
	public partial class vmusage
	{
		
		private double _usage;
		
		public vmusage()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usage", DbType="Float NOT NULL")]
		public double usage
		{
			get
			{
				return this._usage;
			}
			set
			{
				if ((this._usage != value))
				{
					this._usage = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClEvents")]
	public partial class ClEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _ClMlwrId;
		
		private bool _ClType;
		
		private int _module;
		
		private int _event;
		
		private string _who;
		
		private string _dest;
		
		private string _descr;
		
		private System.Nullable<int> _pid1;
		
		private System.Nullable<int> _pid2;
		
		private string _adddata1;
		
		private string _adddata2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClMlwrIdChanging(int value);
    partial void OnClMlwrIdChanged();
    partial void OnClTypeChanging(bool value);
    partial void OnClTypeChanged();
    partial void OnmoduleChanging(int value);
    partial void OnmoduleChanged();
    partial void OneventChanging(int value);
    partial void OneventChanged();
    partial void OnwhoChanging(string value);
    partial void OnwhoChanged();
    partial void OndestChanging(string value);
    partial void OndestChanged();
    partial void OndescrChanging(string value);
    partial void OndescrChanged();
    partial void Onpid1Changing(System.Nullable<int> value);
    partial void Onpid1Changed();
    partial void Onpid2Changing(System.Nullable<int> value);
    partial void Onpid2Changed();
    partial void Onadddata1Changing(string value);
    partial void Onadddata1Changed();
    partial void Onadddata2Changing(string value);
    partial void Onadddata2Changed();
    #endregion
		
		public ClEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClMlwrId", DbType="Int NOT NULL")]
		public int ClMlwrId
		{
			get
			{
				return this._ClMlwrId;
			}
			set
			{
				if ((this._ClMlwrId != value))
				{
					this.OnClMlwrIdChanging(value);
					this.SendPropertyChanging();
					this._ClMlwrId = value;
					this.SendPropertyChanged("ClMlwrId");
					this.OnClMlwrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClType", DbType="Bit NOT NULL")]
		public bool ClType
		{
			get
			{
				return this._ClType;
			}
			set
			{
				if ((this._ClType != value))
				{
					this.OnClTypeChanging(value);
					this.SendPropertyChanging();
					this._ClType = value;
					this.SendPropertyChanged("ClType");
					this.OnClTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int NOT NULL")]
		public int module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Int NOT NULL")]
		public int @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_who", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string who
		{
			get
			{
				return this._who;
			}
			set
			{
				if ((this._who != value))
				{
					this.OnwhoChanging(value);
					this.SendPropertyChanging();
					this._who = value;
					this.SendPropertyChanged("who");
					this.OnwhoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dest", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string dest
		{
			get
			{
				return this._dest;
			}
			set
			{
				if ((this._dest != value))
				{
					this.OndestChanging(value);
					this.SendPropertyChanging();
					this._dest = value;
					this.SendPropertyChanged("dest");
					this.OndestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descr", DbType="VarChar(150)")]
		public string descr
		{
			get
			{
				return this._descr;
			}
			set
			{
				if ((this._descr != value))
				{
					this.OndescrChanging(value);
					this.SendPropertyChanging();
					this._descr = value;
					this.SendPropertyChanged("descr");
					this.OndescrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid1", DbType="Int")]
		public System.Nullable<int> pid1
		{
			get
			{
				return this._pid1;
			}
			set
			{
				if ((this._pid1 != value))
				{
					this.Onpid1Changing(value);
					this.SendPropertyChanging();
					this._pid1 = value;
					this.SendPropertyChanged("pid1");
					this.Onpid1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid2", DbType="Int")]
		public System.Nullable<int> pid2
		{
			get
			{
				return this._pid2;
			}
			set
			{
				if ((this._pid2 != value))
				{
					this.Onpid2Changing(value);
					this.SendPropertyChanging();
					this._pid2 = value;
					this.SendPropertyChanged("pid2");
					this.Onpid2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddata1", DbType="NChar(250)")]
		public string adddata1
		{
			get
			{
				return this._adddata1;
			}
			set
			{
				if ((this._adddata1 != value))
				{
					this.Onadddata1Changing(value);
					this.SendPropertyChanging();
					this._adddata1 = value;
					this.SendPropertyChanged("adddata1");
					this.Onadddata1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddata2", DbType="NChar(250)")]
		public string adddata2
		{
			get
			{
				return this._adddata2;
			}
			set
			{
				if ((this._adddata2 != value))
				{
					this.Onadddata2Changing(value);
					this.SendPropertyChanging();
					this._adddata2 = value;
					this.SendPropertyChanged("adddata2");
					this.Onadddata2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClMlwr")]
	public partial class ClMlwr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ClMlwr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrCl")]
	public partial class MlwrCl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _ClMlwrId;
		
		private int _MlwrId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnClMlwrIdChanging(int value);
    partial void OnClMlwrIdChanged();
    partial void OnMlwrIdChanging(int value);
    partial void OnMlwrIdChanged();
    #endregion
		
		public MlwrCl()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClMlwrId", DbType="Int NOT NULL")]
		public int ClMlwrId
		{
			get
			{
				return this._ClMlwrId;
			}
			set
			{
				if ((this._ClMlwrId != value))
				{
					this.OnClMlwrIdChanging(value);
					this.SendPropertyChanging();
					this._ClMlwrId = value;
					this.SendPropertyChanged("ClMlwrId");
					this.OnClMlwrIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int NOT NULL")]
		public int MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this.OnMlwrIdChanging(value);
					this.SendPropertyChanging();
					this._MlwrId = value;
					this.SendPropertyChanged("MlwrId");
					this.OnMlwrIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TasksViewForRsch")]
	public partial class TasksViewForRsch
	{
		
		private int _ResearchId;
		
		private string _ModuleX;
		
		private string _TypeX;
		
		private string _ValueX;
		
		public TasksViewForRsch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchId", DbType="Int NOT NULL")]
		public int ResearchId
		{
			get
			{
				return this._ResearchId;
			}
			set
			{
				if ((this._ResearchId != value))
				{
					this._ResearchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleX", DbType="VarChar(16)")]
		public string ModuleX
		{
			get
			{
				return this._ModuleX;
			}
			set
			{
				if ((this._ModuleX != value))
				{
					this._ModuleX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeX", DbType="VarChar(MAX)")]
		public string TypeX
		{
			get
			{
				return this._TypeX;
			}
			set
			{
				if ((this._TypeX != value))
				{
					this._TypeX = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueX", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ValueX
		{
			get
			{
				return this._ValueX;
			}
			set
			{
				if ((this._ValueX != value))
				{
					this._ValueX = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventsChartCount")]
	public partial class EventsChartCount
	{
		
		private int _Id;
		
		private string _Module;
		
		private int _Sign;
		
		private System.Nullable<int> _Count;
		
		public EventsChartCount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="VarChar(MAX)")]
		public string Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this._Module = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="Int NOT NULL")]
		public int Sign
		{
			get
			{
				return this._Sign;
			}
			set
			{
				if ((this._Sign != value))
				{
					this._Sign = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vpotoos")]
	public partial class vpotoos
	{
		
		private string _name;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<int> _danger;
		
		private long _Id;
		
		public vpotoos()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_danger", DbType="Int")]
		public System.Nullable<int> danger
		{
			get
			{
				return this._danger;
			}
			set
			{
				if ((this._danger != value))
				{
					this._danger = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vpotop5")]
	public partial class vpotop5
	{
		
		private string _name;
		
		private System.Nullable<int> _count;
		
		private System.Nullable<int> _danger;
		
		private long _Id;
		
		public vpotop5()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_count", DbType="Int")]
		public System.Nullable<int> count
		{
			get
			{
				return this._count;
			}
			set
			{
				if ((this._count != value))
				{
					this._count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_danger", DbType="Int")]
		public System.Nullable<int> danger
		{
			get
			{
				return this._danger;
			}
			set
			{
				if ((this._danger != value))
				{
					this._danger = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Layout")]
	public partial class Layout : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _UserID;
		
		private string _TableName;
		
		private string _UserLayout;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnUserLayoutChanging(string value);
    partial void OnUserLayoutChanged();
    #endregion
		
		public Layout()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLayout", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserLayout
		{
			get
			{
				return this._UserLayout;
			}
			set
			{
				if ((this._UserLayout != value))
				{
					this.OnUserLayoutChanging(value);
					this.SendPropertyChanging();
					this._UserLayout = value;
					this.SendPropertyChanged("UserLayout");
					this.OnUserLayoutChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventsChartSign")]
	public partial class EventsChartSign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _rschId;
		
		private int _module;
		
		private int _significance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnrschIdChanging(int value);
    partial void OnrschIdChanged();
    partial void OnmoduleChanging(int value);
    partial void OnmoduleChanged();
    partial void OnsignificanceChanging(int value);
    partial void OnsignificanceChanged();
    #endregion
		
		public EventsChartSign()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschId", DbType="Int NOT NULL")]
		public int rschId
		{
			get
			{
				return this._rschId;
			}
			set
			{
				if ((this._rschId != value))
				{
					this.OnrschIdChanging(value);
					this.SendPropertyChanging();
					this._rschId = value;
					this.SendPropertyChanged("rschId");
					this.OnrschIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int NOT NULL")]
		public int module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_significance", DbType="Int NOT NULL")]
		public int significance
		{
			get
			{
				return this._significance;
			}
			set
			{
				if ((this._significance != value))
				{
					this.OnsignificanceChanging(value);
					this.SendPropertyChanging();
					this._significance = value;
					this.SendPropertyChanged("significance");
					this.OnsignificanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventsTableView")]
	public partial class EventsTableView
	{
		
		private long _Id;
		
		private string _ModuleId;
		
		private int _EventCode;
		
		private string _who;
		
		private string _dest;
		
		private int _rschId;
		
		private System.Nullable<int> _pid1;
		
		private System.Nullable<int> _pid2;
		
		private string _adddata1;
		
		private string _adddata2;
		
		private System.Nullable<System.DateTime> _timeofevent;
		
		private string _status;
		
		private int _significance;
		
		private string _signdesc;
		
		public EventsTableView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="VarChar(MAX)")]
		public string ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this._ModuleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this._EventCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_who", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string who
		{
			get
			{
				return this._who;
			}
			set
			{
				if ((this._who != value))
				{
					this._who = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dest", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string dest
		{
			get
			{
				return this._dest;
			}
			set
			{
				if ((this._dest != value))
				{
					this._dest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rschId", DbType="Int NOT NULL")]
		public int rschId
		{
			get
			{
				return this._rschId;
			}
			set
			{
				if ((this._rschId != value))
				{
					this._rschId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid1", DbType="Int")]
		public System.Nullable<int> pid1
		{
			get
			{
				return this._pid1;
			}
			set
			{
				if ((this._pid1 != value))
				{
					this._pid1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid2", DbType="Int")]
		public System.Nullable<int> pid2
		{
			get
			{
				return this._pid2;
			}
			set
			{
				if ((this._pid2 != value))
				{
					this._pid2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddata1", DbType="NChar(250)")]
		public string adddata1
		{
			get
			{
				return this._adddata1;
			}
			set
			{
				if ((this._adddata1 != value))
				{
					this._adddata1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adddata2", DbType="NChar(250)")]
		public string adddata2
		{
			get
			{
				return this._adddata2;
			}
			set
			{
				if ((this._adddata2 != value))
				{
					this._adddata2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeofevent", DbType="DateTime")]
		public System.Nullable<System.DateTime> timeofevent
		{
			get
			{
				return this._timeofevent;
			}
			set
			{
				if ((this._timeofevent != value))
				{
					this._timeofevent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NChar(128)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_significance", DbType="Int NOT NULL")]
		public int significance
		{
			get
			{
				return this._significance;
			}
			set
			{
				if ((this._significance != value))
				{
					this._significance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signdesc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string signdesc
		{
			get
			{
				return this._signdesc;
			}
			set
			{
				if ((this._signdesc != value))
				{
					this._signdesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _param;
		
		private string _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnparamChanging(string value);
    partial void OnparamChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_param", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string param
		{
			get
			{
				return this._param;
			}
			set
			{
				if ((this._param != value))
				{
					this.OnparamChanging(value);
					this.SendPropertyChanging();
					this._param = value;
					this.SendPropertyChanged("param");
					this.OnparamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(MAX)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResearchesTableView")]
	public partial class ResearchesTableView
	{
		
		private int _Id;
		
		private string _ResearchName;
		
		private System.DateTime _CreatedDate;
		
		private string _State;
		
		private System.Nullable<int> _mlwrid;
		
		private string _Malware;
		
		private string _VmType;
		
		private string _VmSystem;
		
		private System.Nullable<System.DateTime> _StartedDate;
		
		private System.Nullable<System.DateTime> _StoppedDate;
		
		private int _Duration;
		
		private System.Nullable<int> _UserId;
		
		private string _User;
		
		private System.Nullable<int> _fsEventsCount;
		
		private System.Nullable<int> _regEventsCount;
		
		private System.Nullable<int> _netEventsCount;
		
		private System.Nullable<int> _procEventsCount;
		
		public ResearchesTableView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ResearchName
		{
			get
			{
				return this._ResearchName;
			}
			set
			{
				if ((this._ResearchName != value))
				{
					this._ResearchName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(MAX)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mlwrid", DbType="Int")]
		public System.Nullable<int> mlwrid
		{
			get
			{
				return this._mlwrid;
			}
			set
			{
				if ((this._mlwrid != value))
				{
					this._mlwrid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Malware", DbType="VarChar(MAX)")]
		public string Malware
		{
			get
			{
				return this._Malware;
			}
			set
			{
				if ((this._Malware != value))
				{
					this._Malware = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmType", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string VmType
		{
			get
			{
				return this._VmType;
			}
			set
			{
				if ((this._VmType != value))
				{
					this._VmType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VmSystem", DbType="VarChar(MAX)")]
		public string VmSystem
		{
			get
			{
				return this._VmSystem;
			}
			set
			{
				if ((this._VmSystem != value))
				{
					this._VmSystem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartedDate
		{
			get
			{
				return this._StartedDate;
			}
			set
			{
				if ((this._StartedDate != value))
				{
					this._StartedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoppedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StoppedDate
		{
			get
			{
				return this._StoppedDate;
			}
			set
			{
				if ((this._StoppedDate != value))
				{
					this._StoppedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Int NOT NULL")]
		public int Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[User]", Storage="_User", DbType="NVarChar(50)")]
		public string User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					this._User = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fsEventsCount", DbType="Int")]
		public System.Nullable<int> fsEventsCount
		{
			get
			{
				return this._fsEventsCount;
			}
			set
			{
				if ((this._fsEventsCount != value))
				{
					this._fsEventsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_regEventsCount", DbType="Int")]
		public System.Nullable<int> regEventsCount
		{
			get
			{
				return this._regEventsCount;
			}
			set
			{
				if ((this._regEventsCount != value))
				{
					this._regEventsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netEventsCount", DbType="Int")]
		public System.Nullable<int> netEventsCount
		{
			get
			{
				return this._netEventsCount;
			}
			set
			{
				if ((this._netEventsCount != value))
				{
					this._netEventsCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procEventsCount", DbType="Int")]
		public System.Nullable<int> procEventsCount
		{
			get
			{
				return this._procEventsCount;
			}
			set
			{
				if ((this._procEventsCount != value))
				{
					this._procEventsCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DirectoriesOfEventsView")]
	public partial class DirectoriesOfEventsView
	{
		
		private long _Id;
		
		private string _module;
		
		private string _event;
		
		private string _who;
		
		private string _dest;
		
		private string _signdesc;
		
		public DirectoriesOfEventsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="VarChar(MAX)")]
		public string module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this._module = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="VarChar(MAX)")]
		public string @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this._event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_who", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string who
		{
			get
			{
				return this._who;
			}
			set
			{
				if ((this._who != value))
				{
					this._who = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dest", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string dest
		{
			get
			{
				return this._dest;
			}
			set
			{
				if ((this._dest != value))
				{
					this._dest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signdesc", DbType="NVarChar(50)")]
		public string signdesc
		{
			get
			{
				return this._signdesc;
			}
			set
			{
				if ((this._signdesc != value))
				{
					this._signdesc = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrClass")]
	public partial class MlwrClass : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public MlwrClass()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrClassItems")]
	public partial class MlwrClassItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _MlwrClassId;
		
		private int _ModuleId;
		
		private int _EventId;
		
		private string _Param;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnMlwrClassIdChanging(int value);
    partial void OnMlwrClassIdChanged();
    partial void OnModuleIdChanging(int value);
    partial void OnModuleIdChanged();
    partial void OnEventIdChanging(int value);
    partial void OnEventIdChanged();
    partial void OnParamChanging(string value);
    partial void OnParamChanged();
    #endregion
		
		public MlwrClassItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrClassId", DbType="Int NOT NULL")]
		public int MlwrClassId
		{
			get
			{
				return this._MlwrClassId;
			}
			set
			{
				if ((this._MlwrClassId != value))
				{
					this.OnMlwrClassIdChanging(value);
					this.SendPropertyChanging();
					this._MlwrClassId = value;
					this.SendPropertyChanged("MlwrClassId");
					this.OnMlwrClassIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this.OnModuleIdChanging(value);
					this.SendPropertyChanging();
					this._ModuleId = value;
					this.SendPropertyChanged("ModuleId");
					this.OnModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param", DbType="NVarChar(MAX)")]
		public string Param
		{
			get
			{
				return this._Param;
			}
			set
			{
				if ((this._Param != value))
				{
					this.OnParamChanging(value);
					this.SendPropertyChanging();
					this._Param = value;
					this.SendPropertyChanged("Param");
					this.OnParamChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrsTableView")]
	public partial class MlwrsTableView
	{
		
		private int _Id;
		
		private string _Name;
		
		private string _Path;
		
		private int _ResearchCount;
		
		private string _Class;
		
		private string _Loaded;
		
		public MlwrsTableView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this._Path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchCount", DbType="Int NOT NULL")]
		public int ResearchCount
		{
			get
			{
				return this._ResearchCount;
			}
			set
			{
				if ((this._ResearchCount != value))
				{
					this._ResearchCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loaded", DbType="NVarChar(105)")]
		public string Loaded
		{
			get
			{
				return this._Loaded;
			}
			set
			{
				if ((this._Loaded != value))
				{
					this._Loaded = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrClassView")]
	public partial class MlwrClassView
	{
		
		private string _Name;
		
		private string _Module;
		
		private string _Event;
		
		private string _Param;
		
		private int _id;
		
		private System.Nullable<int> _MlwrId;
		
		public MlwrClassView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Module", DbType="VarChar(MAX)")]
		public string Module
		{
			get
			{
				return this._Module;
			}
			set
			{
				if ((this._Module != value))
				{
					this._Module = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Event", DbType="VarChar(MAX)")]
		public string Event
		{
			get
			{
				return this._Event;
			}
			set
			{
				if ((this._Event != value))
				{
					this._Event = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param", DbType="NVarChar(MAX)")]
		public string Param
		{
			get
			{
				return this._Param;
			}
			set
			{
				if ((this._Param != value))
				{
					this._Param = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int")]
		public System.Nullable<int> MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this._MlwrId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MlwrVPOClassItems")]
	public partial class MlwrVPOClassItem
	{
		
		private string _Name;
		
		private string _Class;
		
		private int _ModuleId;
		
		private int _EventId;
		
		private string _Param;
		
		private int _id;
		
		private int _MlwrId;
		
		public MlwrVPOClassItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleId", DbType="Int NOT NULL")]
		public int ModuleId
		{
			get
			{
				return this._ModuleId;
			}
			set
			{
				if ((this._ModuleId != value))
				{
					this._ModuleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Int NOT NULL")]
		public int EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this._EventId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param", DbType="NVarChar(MAX)")]
		public string Param
		{
			get
			{
				return this._Param;
			}
			set
			{
				if ((this._Param != value))
				{
					this._Param = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MlwrId", DbType="Int NOT NULL")]
		public int MlwrId
		{
			get
			{
				return this._MlwrId;
			}
			set
			{
				if ((this._MlwrId != value))
				{
					this._MlwrId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mlwr")]
	public partial class Mlwr : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Path;
		
		private int _ResearchCount;
		
		private string _Class;
		
		private System.DateTime _LoadedDate;
		
		private int _LoadedBy;
		
		private System.Nullable<int> _IsDeleted;
		
		private string _md5;
		
		private string _sha1;
		
		private string _sha256;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnResearchCountChanging(int value);
    partial void OnResearchCountChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnLoadedDateChanging(System.DateTime value);
    partial void OnLoadedDateChanged();
    partial void OnLoadedByChanging(int value);
    partial void OnLoadedByChanged();
    partial void OnIsDeletedChanging(System.Nullable<int> value);
    partial void OnIsDeletedChanged();
    partial void Onmd5Changing(string value);
    partial void Onmd5Changed();
    partial void Onsha1Changing(string value);
    partial void Onsha1Changed();
    partial void Onsha256Changing(string value);
    partial void Onsha256Changed();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Mlwr()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResearchCount", DbType="Int NOT NULL")]
		public int ResearchCount
		{
			get
			{
				return this._ResearchCount;
			}
			set
			{
				if ((this._ResearchCount != value))
				{
					this.OnResearchCountChanging(value);
					this.SendPropertyChanging();
					this._ResearchCount = value;
					this.SendPropertyChanged("ResearchCount");
					this.OnResearchCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(50)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LoadedDate
		{
			get
			{
				return this._LoadedDate;
			}
			set
			{
				if ((this._LoadedDate != value))
				{
					this.OnLoadedDateChanging(value);
					this.SendPropertyChanging();
					this._LoadedDate = value;
					this.SendPropertyChanged("LoadedDate");
					this.OnLoadedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoadedBy", DbType="Int NOT NULL")]
		public int LoadedBy
		{
			get
			{
				return this._LoadedBy;
			}
			set
			{
				if ((this._LoadedBy != value))
				{
					this.OnLoadedByChanging(value);
					this.SendPropertyChanging();
					this._LoadedBy = value;
					this.SendPropertyChanged("LoadedBy");
					this.OnLoadedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Int")]
		public System.Nullable<int> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_md5", DbType="VarChar(100)")]
		public string md5
		{
			get
			{
				return this._md5;
			}
			set
			{
				if ((this._md5 != value))
				{
					this.Onmd5Changing(value);
					this.SendPropertyChanging();
					this._md5 = value;
					this.SendPropertyChanged("md5");
					this.Onmd5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sha1", DbType="VarChar(100)")]
		public string sha1
		{
			get
			{
				return this._sha1;
			}
			set
			{
				if ((this._sha1 != value))
				{
					this.Onsha1Changing(value);
					this.SendPropertyChanging();
					this._sha1 = value;
					this.SendPropertyChanged("sha1");
					this.Onsha1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sha256", DbType="VarChar(100)")]
		public string sha256
		{
			get
			{
				return this._sha256;
			}
			set
			{
				if ((this._sha256 != value))
				{
					this.Onsha256Changing(value);
					this.SendPropertyChanging();
					this._sha256 = value;
					this.SendPropertyChanged("sha256");
					this.Onsha256Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersInRoles")]
	public partial class UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _UserId;
		
		private int _RoleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UsersInRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsersTableView")]
	public partial class UsersTableView
	{
		
		private int _UserId;
		
		private string _UserName;
		
		private string _Login;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _LastLoginDate;
		
		private string _LastLoginIp;
		
		private string _Name;
		
		public UsersTableView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this._Login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this._LastLoginDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginIp", DbType="NVarChar(50)")]
		public string LastLoginIp
		{
			get
			{
				return this._LastLoginIp;
			}
			set
			{
				if ((this._LastLoginIp != value))
				{
					this._LastLoginIp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
